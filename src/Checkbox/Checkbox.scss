@import '../common.scss';
@import '../common/Focusable/Focusable';

.root {
  display: inline-flex;
  outline: none;

  // Sets minimal height for the container in case there's no label
  min-height: 24px;

  label {
    display: flex;
    cursor: default;
    justify-content: center;
    max-width: 100%;

    &:not(.vtop) {
      align-items: center;
    }
  }

  .vtop .outer {
    margin-top: 4px;
    display: flex;
  }

  &#{$focusable-focus-visible} {
    .checkbox {
      @include FocusBox;
    }

    &.hasError {
      .checkbox {
        @include FocusBoxError;
      }
    }
  }

  &.selectionAreaAlways,
  &.selectionAreaHover {
    cursor: pointer;
    border-radius: 8px;

    .children {
      padding: 12px 16px 12px 12px;
    }

    .outer {
      cursor: pointer;
      padding: 16px 0 16px 16px;
    }

    .vtop .outer {
      margin-top: 0;
    }
  }

  // Backgrounds
  &.selectionAreaAlways {
    background-color: $B60;
  }

  &.selectionAreaAlways:hover,
  &.selectionAreaHover:hover {
    background-color: $B50;
  }

  &.checked,
  &.indeterminate {
    &.selectionAreaAlways,
    &.selectionAreaHover {
      background-color: $B40;
    }
  }
}

.children {
  cursor: pointer;
  padding-left: 12px;
  width: 100%;
}

@include withRTL() {
  .root {
    direction: rtl;

    &.selectionAreaAlways,
    &.selectionAreaHover {

      .children {
        padding: 12px 12px 12px 16px;
      }

      .outer {
        padding: 16px 16px 16px 0;
      }
    }
  }

  .children {
    padding-left: 0;
    padding-right: 12px;
  }
}

.checkbox {
  position: relative;
  width: 16px;
  min-width: 16px;
  height: 16px;
  min-height: 16px;
  border-radius: 4px;
  box-sizing: border-box;
  cursor: pointer;
}

.inner {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 14px;
  height: 14px;
  color: $D80;

  > svg {
    width: 8px;
    height: 8px;
  }
}

/* Checked State */
.checked,
.indeterminate {
  .checkbox {
    border: 1px solid $B10;
    background-color: $B10;

    .inner {
      opacity: 1;
    }
  }
}

/* Unchecked State */
.unchecked {
  .checkbox {
    border: 1px solid $B20;
    background-color: $D80;

    .inner {
      opacity: 0;
    }
  }

  &.hover .checkbox,
  .checkbox:hover {
    background-color: $B50;
  }

  &:hover {
    .checkbox {
      background-color: $B50;
    }
  }
}

/* Disabled */
.disabled {
  pointer-events: none;
  cursor: default;

  .checkbox {
    border-color: $D10-30;
    background-color: $D10-05;
  }

  & .checkbox .inner {
    color: $D10-30;
  }

  &.selectionAreaAlways {
    background-color: transparent;

    &.checked,
    &.indeterminate {
      background-color: transparent;
    }

    .checkbox {
      background-color: transparent;
    }
  }
}

/* Error */
.hasError .checkbox {
  border-color: $R10;
}
